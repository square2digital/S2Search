name: Build and Deploy

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOTNET_VERSION: "9.0.x"
      PROJECT_PATH: "S2Search.Backend/S2Search.Backend.csproj"
      TEST_PROJECT_PATH: "S2Search.Backend.Services/Tests.csproj"
      DOCKER_IMAGE: "ghcr.io/${{ github.repository }}/searchapi"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

      - name: Test
        run: dotnet test ${{ env.TEST_PROJECT_PATH }} --configuration Release --no-build --verbosity normal

      - name: Publish
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ./publish

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }}:latest -f S2Search.Backend/Dockerfile .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ env.DOCKER_IMAGE }}:latest
