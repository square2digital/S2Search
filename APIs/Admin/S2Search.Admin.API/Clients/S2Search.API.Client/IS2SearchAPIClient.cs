//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace S2SearchAPI.Client
{
    public interface IS2SearchAPIClient
    {
        string BaseUrl { get; set; }
        bool ReadResponseAsString { get; set; }

        Task<ICollection<SearchIndexKeys>> CreateKeysAsync(Guid customerId, Guid searchIndexId, SearchIndexKeyGenerationRequest body);
        Task<ICollection<SearchIndexKeys>> CreateKeysAsync(Guid customerId, Guid searchIndexId, SearchIndexKeyGenerationRequest body, CancellationToken cancellationToken);
        Task<NotificationRule> CreateNotificationRuleAsync(Guid customerId, Guid searchIndexId, NotificationRuleRequest body);
        Task<NotificationRule> CreateNotificationRuleAsync(Guid customerId, Guid searchIndexId, NotificationRuleRequest body, CancellationToken cancellationToken);
        Task CreateSearchIndexAsync(Guid customerId, SearchIndexRequest body);
        Task CreateSearchIndexAsync(Guid customerId, SearchIndexRequest body, CancellationToken cancellationToken);
        Task<SearchInterface> CreateSearchInterfaceAsync(Guid customerId, Guid searchIndexId, SearchInterfaceRequest body);
        Task<SearchInterface> CreateSearchInterfaceAsync(Guid customerId, Guid searchIndexId, SearchInterfaceRequest body, CancellationToken cancellationToken);
        Task<Synonym> CreateSynonymAsync(Guid customerId, Guid searchIndexId, SynonymRequest body);
        Task<Synonym> CreateSynonymAsync(Guid customerId, Guid searchIndexId, SynonymRequest body, CancellationToken cancellationToken);
        Task CreateUserAsync(Guid customerId, Guid searchIndexId, CreateUserRequest body);
        Task CreateUserAsync(Guid customerId, Guid searchIndexId, CreateUserRequest body, CancellationToken cancellationToken);
        Task DeleteKeysAsync(Guid customerId, Guid searchIndexId, SearchIndexKeyDeletionRequest body);
        Task DeleteKeysAsync(Guid customerId, Guid searchIndexId, SearchIndexKeyDeletionRequest body, CancellationToken cancellationToken);
        Task DeleteNotificationRuleAsync(Guid customerId, Guid searchIndexId, int notificationRuleId);
        Task DeleteNotificationRuleAsync(Guid customerId, Guid searchIndexId, int notificationRuleId, CancellationToken cancellationToken);
        Task DeleteSearchIndexAsync(Guid customerId, Guid searchIndexId);
        Task DeleteSearchIndexAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task DeleteSynonymAsync(Guid customerId, Guid searchIndexId, Guid synonymId);
        Task DeleteSynonymAsync(Guid customerId, Guid searchIndexId, Guid synonymId, CancellationToken cancellationToken);
        Task DeleteUserAsync(Guid customerId, Guid searchIndexId, string username);
        Task DeleteUserAsync(Guid customerId, Guid searchIndexId, string username, CancellationToken cancellationToken);
        Task<SearchIndexQueryCredentials> EndpointAsync(string customerEndpoint);
        Task<SearchIndexQueryCredentials> EndpointAsync(string customerEndpoint, CancellationToken cancellationToken);
        Task<SearchInsightChart> GetChartByReportNameAsync(Guid customerId, Guid searchIndexId, string reportName, DateTimeOffset? dateFrom, DateTimeOffset? dateTo);
        Task<SearchInsightChart> GetChartByReportNameAsync(Guid customerId, Guid searchIndexId, string reportName, DateTimeOffset? dateFrom, DateTimeOffset? dateTo, CancellationToken cancellationToken);
        Task<ICollection<SearchConfigurationOption>> GetConfigAsync(Guid searchIndexId);
        Task<ICollection<SearchConfigurationOption>> GetConfigAsync(Guid searchIndexId, CancellationToken cancellationToken);
        Task GetCredentialsAsync(Guid customerId, Guid searchIndexId);
        Task GetCredentialsAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<CustomerFull> GetCustomerAndSearchIndexesAsync(Guid customerId);
        Task<CustomerFull> GetCustomerAndSearchIndexesAsync(Guid customerId, CancellationToken cancellationToken);
        Task<CustomerIds> GetCustomerAsync(Guid customerId);
        Task<CustomerIds> GetCustomerAsync(Guid customerId, CancellationToken cancellationToken);
        Task<ICollection<DashboardSummaryItem>> GetDashboardSummaryAsync(Guid customerId);
        Task<ICollection<DashboardSummaryItem>> GetDashboardSummaryAsync(Guid customerId, CancellationToken cancellationToken);
        Task<ICollection<GenericSynonyms>> GetGenericSynonymsAsync(string category);
        Task<ICollection<GenericSynonyms>> GetGenericSynonymsAsync(string category, CancellationToken cancellationToken);
        Task<ICollection<SearchIndexKeys>> GetKeysAsync(Guid customerId, Guid searchIndexId);
        Task<ICollection<SearchIndexKeys>> GetKeysAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<Feed> GetLatestFeedConfigurationAsync(Guid customerId, Guid searchIndexId);
        Task<Feed> GetLatestFeedConfigurationAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<SearchInterface> GetLatestSearchInterfaceAsync(Guid customerId, Guid searchIndexId);
        Task<SearchInterface> GetLatestSearchInterfaceAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<NotificationRule> GetNotificationRuleByIdAsync(Guid customerId, Guid searchIndexId, int notificationRuleId);
        Task<NotificationRule> GetNotificationRuleByIdAsync(Guid customerId, Guid searchIndexId, int notificationRuleId, CancellationToken cancellationToken);
        Task<ICollection<NotificationRule>> GetNotificationRulesAsync(Guid customerId, Guid searchIndexId);
        Task<ICollection<NotificationRule>> GetNotificationRulesAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<NotificationPagedResults> GetNotificationsAsync(Guid customerId, Guid searchIndexId, int? page, int? pageSize);
        Task<NotificationPagedResults> GetNotificationsAsync(Guid customerId, Guid searchIndexId, int? page, int? pageSize, CancellationToken cancellationToken);
        Task<ICollection<SearchConfigurationOption>> GetSearchConfigurationAsync(string customerEndpoint);
        Task<ICollection<SearchConfigurationOption>> GetSearchConfigurationAsync(string customerEndpoint, CancellationToken cancellationToken);
        Task<SearchIndexFull> GetSearchIndexAsync(Guid customerId, Guid searchIndexId, bool? fullResource);
        Task<SearchIndexFull> GetSearchIndexAsync(Guid customerId, Guid searchIndexId, bool? fullResource, CancellationToken cancellationToken);
        Task<SearchIndex> GetSearchIndexByNameAsync(Guid customerId, string friendlyName);
        Task<SearchIndex> GetSearchIndexByNameAsync(Guid customerId, string friendlyName, CancellationToken cancellationToken);
        Task<ICollection<CustomerPricingTier>> GetSearchIndexPricingAsync(Guid customerId);
        Task<ICollection<CustomerPricingTier>> GetSearchIndexPricingAsync(Guid customerId, CancellationToken cancellationToken);
        Task<SearchIndexQueryCredentials> GetSearchIndexQueryCredentialsAsync(string customerEndpoint);
        Task<SearchIndexQueryCredentials> GetSearchIndexQueryCredentialsAsync(string customerEndpoint, CancellationToken cancellationToken);
        Task<SearchInsightSummary> GetSearchInsightsSummaryAsync(Guid customerId, Guid searchIndexId);
        Task<SearchInsightSummary> GetSearchInsightsSummaryAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task GetStatusAsync();
        Task GetStatusAsync(CancellationToken cancellationToken);
        Task<Synonym> GetSynonymByIdAsync(Guid customerId, Guid searchIndexId, Guid synonymId);
        Task<Synonym> GetSynonymByIdAsync(Guid customerId, Guid searchIndexId, Guid synonymId, CancellationToken cancellationToken);
        Task<ICollection<Synonym>> GetSynonymsAsync(Guid customerId, Guid searchIndexId);
        Task<ICollection<Synonym>> GetSynonymsAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<Theme> GetThemeAsync(string customerEndpoint);
        Task<Theme> GetThemeAsync(string customerEndpoint, CancellationToken cancellationToken);
        Task<Theme> GetThemeByIdAsync(Guid customerId, Guid searchIndexId, Guid themeId);
        Task<Theme> GetThemeByIdAsync(Guid customerId, Guid searchIndexId, Guid themeId, CancellationToken cancellationToken);
        Task<Theme> GetThemeBySearchIndexIdAsync(Guid customerId, Guid searchIndexId);
        Task<Theme> GetThemeBySearchIndexIdAsync(Guid customerId, Guid searchIndexId, CancellationToken cancellationToken);
        Task<ThemeCollection> GetThemesByCustomerIdAsync(Guid customerId, string searchIndexId);
        Task<ThemeCollection> GetThemesByCustomerIdAsync(Guid customerId, string searchIndexId, CancellationToken cancellationToken);
        Task<SearchInsightTile> GetTileByReportNameAsync(Guid customerId, Guid searchIndexId, string reportName, DateTimeOffset? dateFrom, DateTimeOffset? dateTo, bool? includePreviousPeriod);
        Task<SearchInsightTile> GetTileByReportNameAsync(Guid customerId, Guid searchIndexId, string reportName, DateTimeOffset? dateFrom, DateTimeOffset? dateTo, bool? includePreviousPeriod, CancellationToken cancellationToken);
        Task<Feed> SaveFeedConfigurationAsync(Guid customerId, Guid searchIndexId, FeedRequest body);
        Task<Feed> SaveFeedConfigurationAsync(Guid customerId, Guid searchIndexId, FeedRequest body, CancellationToken cancellationToken);
        Task<SearchConfigurationUpdateMapping> UpdateConfigAsync(SearchConfigurationUpdateMapping body);
        Task<SearchConfigurationUpdateMapping> UpdateConfigAsync(SearchConfigurationUpdateMapping body, CancellationToken cancellationToken);
        Task<Synonym> UpdateSynonymAsync(Guid customerId, Guid searchIndexId, Guid synoynmId, SynonymRequest body);
        Task<Synonym> UpdateSynonymAsync(Guid customerId, Guid searchIndexId, Guid synoynmId, SynonymRequest body, CancellationToken cancellationToken);
        Task<Theme> UpdateThemeAsync(Guid customerId, Guid searchIndexId, ThemeRequest body);
        Task<Theme> UpdateThemeAsync(Guid customerId, Guid searchIndexId, ThemeRequest body, CancellationToken cancellationToken);
        Task UpdateUserPasswordAsync(Guid customerId, Guid searchIndexId, UpdatePasswordRequest body);
        Task UpdateUserPasswordAsync(Guid customerId, Guid searchIndexId, UpdatePasswordRequest body, CancellationToken cancellationToken);
        Task UpdateUserStatusAsync(Guid customerId, Guid searchIndexId, UpdateUserStatusRequest body);
        Task UpdateUserStatusAsync(Guid customerId, Guid searchIndexId, UpdateUserStatusRequest body, CancellationToken cancellationToken);
        Task UploadFeedFileAsync(Guid customerId, Guid searchIndexId, FileParameter feedFile);
        Task UploadFeedFileAsync(Guid customerId, Guid searchIndexId, FileParameter feedFile, CancellationToken cancellationToken);
    }
}