# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

resources:
  repositories:
    - repository: DevOpsTemplates
      name: "S2Search/S2Search.Infrastructure"
      type: git

trigger:
  - master

variables:
  - template: DevOps/templates/shared/variables-default.yml@DevOpsTemplates
    parameters:
      dockerBuildContext: "$(Build.ArtifactStagingDirectory)/Search"
      containerRepository: "$(containerNamespace)/s2search/elasticapi"
  - template: DevOps/templates/shared/variables-custom.yml@DevOpsTemplates
    parameters:
      customVariables:
        BuildOutputRepositoryName: "$(Build.Repository.Name)"
        BuildOutputReason: "$(Build.Reason)"
        vmImage: "ubuntu-latest"
        targetWebProject: "**/Search.csproj"
        targetRestoreProject: "**/*.csproj"
        targetTestProject: "**/Tests.csproj"
        azureSubscription: "S2-Pay-As-You-Go (f8cff945-b5e5-462a-9786-d69bd7a0eb34)"
        appServiceName: "s2search-api-dev"

stages:
  - template: DevOps/templates/dotnet/stage-build-docker-image.yml@DevOpsTemplates
    parameters:
      dotnetVersion: "7.x"
      deploymentFilesSourceFolder: "$(System.DefaultWorkingDirectory)/deploy"
      deploymentFilesTargetFolder: "$(Build.ArtifactStagingDirectory)/deploy"
      appSettingsSourceFolder: "$(System.DefaultWorkingDirectory)/Search"
      targetRestoreProject: "$(targetRestoreProject)"
      targetWebProject: "$(targetWebProject)"
      targetTestProject: "$(targetTestProject)"
      hasTests: true
      vstsFeed: "$(vstsFeed)"
      buildConfiguration: "$(buildConfiguration)"
      buildVmImage: "${{ variables.vmImage }}"
      buildPublishDirectory: "$(Build.ArtifactStagingDirectory)"
      containerRegistryConnection: "$(containerRegistryConnection)"
      containerRepository: "$(containerRepository)"
      dockerfilePath: "$(dockerfilePath)"
      dockerBuildContext: "$(dockerBuildContext)"
      dockerBuildTag: "$(Build.BuildId)"

  # - template: DevOps/templates/shared/stage-deploy-app-service-container.yml@DevOpsTemplates
  #   parameters:
  #     deployVmImage: "$(vmImage)"
  #     deployEnvironment: "dev"
  #     azureSubscription: "S2-Pay-As-You-Go (f8cff945-b5e5-462a-9786-d69bd7a0eb34)"
  #     azureResourceGroup: "Demo-JG-UKS-AzureSearch"
  #     appServiceName: "s2search-api-dev"
  #     fullContainerImageUrl: $(ContainerImageUrl)
  #     containerRegistryUrl: $(ContainerRegistryUrl)
  #     containerRegistryUsername: $(ContainerRegistryUsername)
  #     containerRegistryPassword: $(ContainerRegistryPassword)
  #     workingDirectory: "$(System.DefaultWorkingDirectory)"
  #     deployScriptsPath: "$(Agent.BuildDirectory)/drop/deploy"
  #     templatesRepositoryName: "DevOpsTemplates"
  #     secrets:
  #       SEARCHCREDENTIALSQUERYKEY: $(SearchCredentialsQueryKey)

  # - template: DevOps/templates/shared/stage-deploy-k8s.yml@DevOpsTemplates
  #   parameters:
  #     workingDirectory: "$(System.DefaultWorkingDirectory)"
  #     deployVmImage: "$(vmImage)"
  #     deployEnvironment: "dev"
  #     deployScriptsPath: "$(Agent.BuildDirectory)/drop/deploy"
  #     kubernetesServiceConnection: "$(kubernetesServiceConnection)"
  #     kubernetesNamespace: "$(kubernetesNamespace)"
  #     templatesRepositoryName: "DevOpsTemplates"
  #     secrets:
  #       SEARCHCREDENTIALSQUERYKEY: $(SearchCredentialsQueryKey)
  #       AZURESTORAGEACCOUNT: $(AzureStorageAccount)
