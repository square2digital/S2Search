apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
        - name: config
          image: redis:6.2.3-alpine
          command: ["sh", "-c"]
          args:
            - |
              cp /tmp/redis/redis.conf /etc/redis/redis.conf

              echo "testing init container..."

                if [ "$(hostname)" == "redis-0" ]; then
                  echo "this is redis-0, not updating config..."
                else
                  echo "updating redis.conf..."
                  echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
                fi
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
            - name: config
              mountPath: /tmp/redis/
      containers:
        - name: redis
          image: redis:6.2.6-alpine
          command: ["redis-server"]
          args: ["/etc/redis/redis.conf"]
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis/
      volumes:
        - name: redis-config
          emptyDir: {}
        - name: config
          configMap:
            name: redis-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        ##############################
        ## this will catch you out ##
        # for Docker Desktop (Local K8s Cluster) set to -> storageClassName: "hostpath"
        # for Azure it needs to be -> storageClassName: "default"
        ##############################
        storageClassName: "hostpath"
        resources:
          requests:
            storage: 250Mi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  clusterIP: None
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
  selector:
    app: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-nodeport
  labels:
    app: redis
spec:
  type: NodePort
  ports:
    - port: 6379
      nodePort: 32388
      name: http
  selector:
    app: redis
