# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

variables:
  tag: "$(Build.BuildId)"
  vmImageName: "ubuntu-latest"
  DOCKER_BUILDKIT: 1
  containerRegistryConnectionName: "GitLab"
  containerRepository: "dp-dev0/s2search/s2searchui"

pool:
  vmImage: $(vmImageName)

jobs:
  - job: BuildImage
    displayName: Build Image
    pool:
      vmImage: $(vmImageName)
    continueOnError: false
    variables:
      stageEnvironment: "production"
    steps:
      - task: CopyFiles@2
        displayName: Copy Deployment Files
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          SourceFolder: "$(System.DefaultWorkingDirectory)/deploy"
          Contents: "**"
          TargetFolder: "$(Build.ArtifactStagingDirectory)/deploy"

      - task: Docker@2
        displayName: Build docker image
        inputs:
          containerRegistry: "$(containerRegistryConnectionName)"
          repository: "$(containerRepository)-$(stageEnvironment)"
          command: "build"
          Dockerfile: "**/Dockerfile"
          buildContext: "$(System.DefaultWorkingDirectory)/S2Search"
          tags: |
            $(tag)
            latest
          arguments: "--build-arg NODE_ENV=$(stageEnvironment)"
          addPipelineData: false
          addBaseImageData: false

      - task: Docker@2
        displayName: Push docker image
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          containerRegistry: "$(containerRegistryConnectionName)"
          repository: "$(containerRepository)-$(stageEnvironment)"
          command: "push"
          tags: |
            $(tag)
            latest
          addPipelineData: false
          addBaseImageData: false

      - task: PublishBuildArtifacts@1
        displayName: Publish deployment files
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
